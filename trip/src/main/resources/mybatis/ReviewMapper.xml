<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
        namespace="com.ssafy.trip.repository.review.ReviewRepository">
    <resultMap id="reviewMap" type="reviewDto">
        <result column="user_id" property="user_id" jdbcType="VARCHAR"
                javaType="String"/>
        <result column="review_id" property="review_id"
                jdbcType="INTEGER" javaType="int"/>
        <result column="title" property="title" jdbcType="VARCHAR"
                javaType="String"/>
        <result column="content" property="content" jdbcType="VARCHAR"
                javaType="String"/>
        <result column="register_time" property="register_time"
                jdbcType="TIMESTAMP" javaType="String"/>
        <result column="first_image" property="first_image"
                jdbcType="VARCHAR" javaType="String"/>
        <result column="plan_id" property="plan_id"
                jdbcType="INTEGER" javaType="int"/>
        <result column="like" property="like" jdbcType="INTEGER"
                javaType="int"/>
        <result column="hit" property="hit" jdbcType="INTEGER"
                javaType="int"/>
    </resultMap>

    <sql id="search">
        <if test="word != null and word != ''">
            <if test="key == 'title'">
                and title like concat('%', #{word}, '%')
            </if>
            <if test="key != 'title'">
                and #{key} = #{word}
            </if>
        </if>
    </sql>

    <insert id="write" parameterType="reviewDto">
        insert into travel_review (user_id, title, content, first_image)
        values (#{user_id}, #{title}, #{content}, #{first_image})
    </insert>

    <select id="getMaxReviewId" resultType="java.lang.Integer">
        SELECT MAX(review_id) FROM travel_review
    </select>

    <select id="list" parameterType="map" resultMap="reviewMap">
        select user_id, review_id, title, `like`, hit, register_time, first_image
        from travel_review
<!--        <include refid="search"></include>-->
    </select>

    <select id="select" parameterType="int" resultType="reviewDto">
        select user_id, review_id, title, content, `like`, hit, register_time
        from travel_review
        where review_id = #{review_id}
    </select>

    <select id="my_list" parameterType="String" resultMap="reviewMap">
        select user_id, review_id, title, `like`, hit, register_time, first_image
        from travel_review
        where user_id = #{user_id}
    </select>

    <select id="follower_list" parameterType="String" resultMap="reviewMap">
        select user_id, review_id, title, `like`, hit, register_time, first_image
        from travel_review
        where user_id in (select follower_id from follower where user_id = #{user_id})
    </select>

    <update id="modify" parameterType="reviewDto">
        update travel_review
        set title   = #{title},
            content = #{content}
        <if test="plan_id != 0">
            , plan_id = #{plan_id}
        </if>

        <if test="plan_id == 0">
            , plan_id = null
        </if>

        where review_id = #{review_id}
    </update>

    <update id="updateHit" parameterType="int">
        update travel_review
        set hit = hit + 1
        where review_id = #{review_id}
    </update>

    <update id="updateLike" parameterType="int">
        update travel_review
        set `like` = `like` + 1
        where review_id = #{review_id}
    </update>


    <delete id="delete" parameterType="int">
        delete
        from travel_review
        where review_id = #{review_id}
    </delete>
</mapper>